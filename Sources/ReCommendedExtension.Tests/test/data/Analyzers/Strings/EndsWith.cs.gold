using System;

namespace Test
{
    public class Strings
    {
        public void Empty(string text)
        {
            var result1 = |text.EndsWith("")|(0);
            var result2 = |text.EndsWith("", StringComparison.OrdinalIgnoreCase)|(1);
        }

        public void Char(string text, char c)
        {
            var result1 = text.|EndsWith('a')|(2);
            var result2 = text.|EndsWith(c)|(3);
        }

        public void SingleCharacter(string text)
        {
            var result1 = text.|EndsWith("a", StringComparison.Ordinal)|(4);
            var result2 = text.|EndsWith("a", StringComparison.OrdinalIgnoreCase)|(5);
        }

        public void NoDetection(string text, string value)
        {
            text.EndsWith("");
            text.EndsWith("", StringComparison.OrdinalIgnoreCase)

            text.EndsWith('a');
            text.EndsWith("a", StringComparison.Ordinal);

            var result1 = text.EndsWith("abc", StringComparison.Ordinal);
            var result2 = text.EndsWith(value, StringComparison.Ordinal);

            var result3 = text.EndsWith("a", StringComparison.CurrentCulture);
            var result4 = text.EndsWith("a", StringComparison.CurrentCulture);
        }
    }
}
---------------------------------------------------------
(0): ReSharper Suggestion: The expression is always true.
(1): ReSharper Suggestion: The expression is always true.
(2): ReSharper Suggestion: Use list pattern.
(3): ReSharper Suggestion: Use list pattern.
(4): ReSharper Suggestion: Use list pattern.
(5): ReSharper Suggestion: Use list pattern.
