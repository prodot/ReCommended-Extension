using System;

namespace Test
{
    public class Halves
    {
        public void RedundantArgument(Half x, int digits, MidpointRounding mode)
        {
            var result1 = Half.Round(x, |0|(0));
            var result2 = Half.Round(x, |0|(1), mode);
            var result3 = Half.Round(x, |MidpointRounding.ToEven|(2));
            var result4 = Half.Round(x, digits, |MidpointRounding.ToEven|(3));
            var result5 = Half.Round(x, |0|(4), |MidpointRounding.ToEven|(5));
        }

        public void NoDetection(Half x, int digits, MidpointRounding mode)
        {
            var result1 = Half.Round(x, digits);
            var result2 = Half.Round(x, mode);
            var result3 = Half.Round(x, digits, mode);
        }
    }
}
---------------------------------------------------------
(0): ReSharper Dead Code: Passing 0 is redundant.
(1): ReSharper Dead Code: Passing 0 is redundant.
(2): ReSharper Dead Code: Passing MidpointRounding.ToEven is redundant.
(3): ReSharper Dead Code: Passing MidpointRounding.ToEven is redundant.
(4): ReSharper Dead Code: Passing 0 is redundant.
(5): ReSharper Dead Code: Passing MidpointRounding.ToEven is redundant.
