using System;

namespace Test
{
    public class UInt16s
    {
        public void Clamp(ushort number)
        {
            var result11 = |ushort.Clamp(number, 1, 0x01)|(0);
            var result12 = |ushort.Clamp(number, 97, 'a')|(1);

            ushort result21 = |ushort.Clamp(number, 1, 0x01)|(2);
            ushort result22 = |ushort.Clamp(number, 97, 'a')|(3);

            var result31 = |ushort.Clamp(number, ushort.MinValue, ushort.MaxValue)|(4);
            var result32 = |ushort.Clamp(1, ushort.MinValue, ushort.MaxValue)|(5);
            var result33 = |ushort.Clamp('a', ushort.MinValue, ushort.MaxValue)|(6);

            ushort result41 = |ushort.Clamp(number, ushort.MinValue, ushort.MaxValue)|(7);
            ushort result42 = |ushort.Clamp(1, ushort.MinValue, ushort.MaxValue)|(8);
            ushort result43 = |ushort.Clamp('a', ushort.MinValue, ushort.MaxValue)|(9);

            var result51 = |Math.Clamp(number, (ushort)1, (ushort)1)|(10);
            var result52 = |Math.Clamp(number, ushort.MinValue, ushort.MaxValue)|(11);
        }

        public void DivRem(ushort left)
        {
            var result11 = |ushort.DivRem(0, 10)|(12);

            (ushort, ushort) result21 = |ushort.DivRem(0, 10)|(13);

            (ushort quotient, ushort remainder) result32 = |ushort.DivRem(0, 10)|(14);

            var result71 = |Math.DivRem((ushort)0, (ushort)10)|(15);
        }

        public void Equals(ushort number)
        {
            var result = |number.Equals(null)|(16);
        }

        public void GetTypeCode(ushort number)
        {
            var result = |number.GetTypeCode()|(17);
        }

        public void Max()
        {
            const int c = 10;

            var result11 = |ushort.Max(10, 0x0A)|(18);
            var result12 = |ushort.Max(10, c)|(19);
            var result13 = |ushort.Max(97, 'a')|(20);

            ushort result21 = |ushort.Max(10, 0x0A)|(21);
            ushort result22 = |ushort.Max(10, c)|(22);
            ushort result23 = |ushort.Max(97, 'a')|(23);

            var result31 = |Math.Max((ushort)10, (ushort)10)|(24);
        }

        public void Min()
        {
            const int c = 10;

            var result11 = |ushort.Min(10, 0x0A)|(25);
            var result12 = |ushort.Min(10, c)|(26);
            var result13 = |ushort.Min(97, 'a')|(27);

            ushort result21 = |ushort.Min(10, 0x0A)|(28);
            ushort result22 = |ushort.Min(10, c)|(29);
            ushort result23 = |ushort.Min(97, 'a')|(30);

            var result31 = |Math.Min((ushort)10, (ushort)10)|(31);
        }

        public void RotateLeft(ushort n)
        {
            const int c = 1;

            var result11 = |ushort.RotateLeft(n, 0)|(32);
            var result12 = |ushort.RotateLeft(0x01, 0)|(33);
            var result13 = |ushort.RotateLeft(1 + 1, 0)|(34);
            var result14 = |ushort.RotateLeft(c, 0)|(35);
            var result15 = |ushort.RotateLeft('a', 0)|(36);

            ushort result21 = |ushort.RotateLeft(n, 0)|(37);
            ushort result22 = |ushort.RotateLeft(1, 0)|(38);
            ushort result23 = |ushort.RotateLeft(1 + 1, 0)|(39);
            ushort result24 = |ushort.RotateLeft(c, 0)|(40);
            ushort result25 = |ushort.RotateLeft('a', 0)|(41);
        }

        public void RotateRight(ushort n)
        {
            const int c = 1;

            var result11 = |ushort.RotateRight(n, 0)|(42);
            var result12 = |ushort.RotateRight(0x01, 0)|(43);
            var result13 = |ushort.RotateRight(1 + 1, 0)|(44);
            var result14 = |ushort.RotateRight(c, 0)|(45);
            var result15 = |ushort.RotateRight('a', 0)|(46);

            ushort result21 = |ushort.RotateRight(n, 0)|(47);
            ushort result22 = |ushort.RotateRight(1, 0)|(48);
            ushort result23 = |ushort.RotateRight(1 + 1, 0)|(49);
            ushort result24 = |ushort.RotateRight(c, 0)|(50);
            ushort result25 = |ushort.RotateRight('a', 0)|(51);
        }
    }
}
------------------------------------------------
0: The expression is always 1.
QUICKFIXES:
Replace with '(ushort)0x01'
Replace with '(ushort)1'
1: The expression is always 97.
QUICKFIXES:
Replace with '(ushort)'a''
Replace with '(ushort)97'
2: The expression is always 1.
QUICKFIXES:
Replace with '0x01'
Replace with '1'
3: The expression is always 97.
QUICKFIXES:
Replace with ''a''
Replace with '97'
4: The expression is always the same as the first argument.
QUICKFIXES:
Replace with 'number'
5: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '(ushort)1'
6: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '(ushort)'a''
7: The expression is always the same as the first argument.
QUICKFIXES:
Replace with 'number'
8: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '1'
9: The expression is always the same as the first argument.
QUICKFIXES:
Replace with ''a''
10: The expression is always 1.
QUICKFIXES:
Replace with '(ushort)1'
11: The expression is always the same as the first argument.
QUICKFIXES:
Replace with 'number'
12: The expression is always (0, 0).
QUICKFIXES:
Replace with '(Quotient: (ushort)0, Remainder: (ushort)0)'
13: The expression is always (0, 0).
QUICKFIXES:
Replace with '(0, 0)'
14: The expression is always (0, 0).
QUICKFIXES:
Replace with '(0, 0)'
15: The expression is always (0, 0).
QUICKFIXES:
Replace with '(Quotient: (ushort)0, Remainder: (ushort)0)'
16: The expression is always false.
QUICKFIXES:
Replace with 'false'
17: The expression is always TypeCode.UInt16.
QUICKFIXES:
Replace with 'TypeCode.UInt16'
18: The expression is always 10.
QUICKFIXES:
Replace with '(ushort)0x0A'
Replace with '(ushort)10'
19: The expression is always 10.
QUICKFIXES:
Replace with '(ushort)c'
Replace with '(ushort)10'
20: The expression is always 97.
QUICKFIXES:
Replace with '(ushort)'a''
Replace with '(ushort)97'
21: The expression is always 10.
QUICKFIXES:
Replace with '0x0A'
Replace with '10'
22: The expression is always 10.
QUICKFIXES:
Replace with 'c'
Replace with '10'
23: The expression is always 97.
QUICKFIXES:
Replace with ''a''
Replace with '97'
24: The expression is always 10.
QUICKFIXES:
Replace with '(ushort)10'
25: The expression is always 10.
QUICKFIXES:
Replace with '(ushort)0x0A'
Replace with '(ushort)10'
26: The expression is always 10.
QUICKFIXES:
Replace with '(ushort)c'
Replace with '(ushort)10'
27: The expression is always 97.
QUICKFIXES:
Replace with '(ushort)'a''
Replace with '(ushort)97'
28: The expression is always 10.
QUICKFIXES:
Replace with '0x0A'
Replace with '10'
29: The expression is always 10.
QUICKFIXES:
Replace with 'c'
Replace with '10'
30: The expression is always 97.
QUICKFIXES:
Replace with ''a''
Replace with '97'
31: The expression is always 10.
QUICKFIXES:
Replace with '(ushort)10'
32: The expression is always the same as the first argument.
QUICKFIXES:
Replace with 'n'
33: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '(ushort)0x01'
34: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '(ushort)(1 + 1)'
35: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '(ushort)c'
36: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '(ushort)'a''
37: The expression is always the same as the first argument.
QUICKFIXES:
Replace with 'n'
38: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '1'
39: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '1 + 1'
40: The expression is always the same as the first argument.
QUICKFIXES:
Replace with 'c'
41: The expression is always the same as the first argument.
QUICKFIXES:
Replace with ''a''
42: The expression is always the same as the first argument.
QUICKFIXES:
Replace with 'n'
43: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '(ushort)0x01'
44: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '(ushort)(1 + 1)'
45: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '(ushort)c'
46: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '(ushort)'a''
47: The expression is always the same as the first argument.
QUICKFIXES:
Replace with 'n'
48: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '1'
49: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '1 + 1'
50: The expression is always the same as the first argument.
QUICKFIXES:
Replace with 'c'
51: The expression is always the same as the first argument.
QUICKFIXES:
Replace with ''a''
