using System;

namespace Test
{
    public class SBytes
    {
        public void Clamp(sbyte number)
        {
            var result11 = |sbyte.Clamp(number, 1, 0x01)|(0);

            sbyte result21 = |sbyte.Clamp(number, 1, 0x01)|(1);

            var result31 = |sbyte.Clamp(number, sbyte.MinValue, sbyte.MaxValue)|(2);
            var result32 = |sbyte.Clamp(1, sbyte.MinValue, sbyte.MaxValue)|(3);

            sbyte result41 = |sbyte.Clamp(number, sbyte.MinValue, sbyte.MaxValue)|(4);
            sbyte result42 = |sbyte.Clamp(1, sbyte.MinValue, sbyte.MaxValue)|(5);

            var result51 = |Math.Clamp(number, (sbyte)1, (sbyte)1)|(6);
            var result52 = |Math.Clamp(number, sbyte.MinValue, sbyte.MaxValue)|(7);
        }

        public void DivRem(sbyte left)
        {
            const int c = 1;

            var result11 = |sbyte.DivRem(0, 10)|(8);

            (sbyte, sbyte) result21 = |sbyte.DivRem(0, 10)|(9);

            (sbyte quotient, sbyte remainder) result32 = |sbyte.DivRem(0, 10)|(10);

            var result31 = |sbyte.DivRem(left, 1)|(11);
            var result32 = |sbyte.DivRem(0x10, 1)|(12);
            var result32 = |sbyte.DivRem(c, 1)|(13);

            (sbyte, sbyte) result41 = |sbyte.DivRem(left, 1)|(14);
            (sbyte, sbyte) result42 = |sbyte.DivRem(0x10, 1)|(15);
            (sbyte, sbyte) result42 = |sbyte.DivRem(c, 1)|(16);

            (sbyte quotient, sbyte remainder) result51 = |sbyte.DivRem(left, 1)|(17);
            (sbyte quotient, sbyte remainder) result52 = |sbyte.DivRem(0x10, 1)|(18);
            (sbyte quotient, sbyte remainder) result52 = |sbyte.DivRem(c, 1)|(19);

            var result61 = |Math.DivRem((sbyte)0, (sbyte)10)|(20);
            var result62 = |Math.DivRem(left, (sbyte)1)|(21);
        }

        public void Equals(sbyte number)
        {
            var result = |number.Equals(null)|(22);
        }

        public void GetTypeCode(sbyte number)
        {
            var result = |number.GetTypeCode()|(23);
        }
    }
}
------------------------------------------------
0: The expression is always 1.
QUICKFIXES:
Replace with '(sbyte)0x01'
Replace with '(sbyte)1'
1: The expression is always 1.
QUICKFIXES:
Replace with '0x01'
Replace with '1'
2: The expression is always the same as the first argument.
QUICKFIXES:
Replace with 'number'
3: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '(sbyte)1'
4: The expression is always the same as the first argument.
QUICKFIXES:
Replace with 'number'
5: The expression is always the same as the first argument.
QUICKFIXES:
Replace with '1'
6: The expression is always 1.
QUICKFIXES:
Replace with '(sbyte)1'
7: The expression is always the same as the first argument.
QUICKFIXES:
Replace with 'number'
8: The expression is always (0, 0).
QUICKFIXES:
Replace with '(Quotient: (sbyte)0, Remainder: (sbyte)0)'
9: The expression is always (0, 0).
QUICKFIXES:
Replace with '(0, 0)'
10: The expression is always (0, 0).
QUICKFIXES:
Replace with '(0, 0)'
11: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(Quotient: left, Remainder: (sbyte)0)'
12: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(Quotient: (sbyte)0x10, Remainder: (sbyte)0)'
13: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(Quotient: (sbyte)c, Remainder: (sbyte)0)'
14: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(left, 0)'
15: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(0x10, 0)'
16: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(c, 0)'
17: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(left, 0)'
18: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(0x10, 0)'
19: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(c, 0)'
20: The expression is always (0, 0).
QUICKFIXES:
Replace with '(Quotient: (sbyte)0, Remainder: (sbyte)0)'
21: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(Quotient: left, Remainder: (sbyte)0)'
22: The expression is always false.
QUICKFIXES:
Replace with 'false'
23: The expression is always TypeCode.SByte.
QUICKFIXES:
Replace with 'TypeCode.SByte'
