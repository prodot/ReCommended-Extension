using System;

namespace Test
{
    public class Randoms
    {
        public void RedundantArgument(Random random, long maxValue)
        {
            var result11 = random.NextInt64(|long.MaxValue|(0));
            var result12 = random.NextInt64(|9_223_372_036_854_775_807|(1));
            var result13 = random.NextInt64(|0x7fff_ffff_ffff_ffff|(2));

            var result21 = random.NextInt64(|0|(3), maxValue);
        }

        public void RedundantArgument_Nullable(Random? random, int maxValue)
        {
            var result11 = random?.NextInt64(|long.MaxValue|(4));
            var result12 = random?.NextInt64(|9_223_372_036_854_775_807|(5));
            var result13 = random?.NextInt64(|0x7fff_ffff_ffff_ffff|(6));

            var result21 = random?.NextInt64(|0|(7), maxValue);
        }

        public void ExpressionResult(Random random)
        {
            var result11 = |random.NextInt64(0)|(8);
            var result12 = |random.NextInt64(1)|(9);

            var result21 = |random.NextInt64(10, 10)|(10);
            var result22 = |random.NextInt64(10, 11)|(11);
        }

        public void NoDetection(Random random, long minValue, long maxValue)
        {
            var result1 = random.NextInt64(minValue, int.MaxValue);
            var result2 = random.NextInt64(minValue, maxValue);

            random.NextInt64(0);
            random.NextInt64(1);

            random.NextInt64(10, 10);
            random.NextInt64(10, 11);
        }

        public void NoDetection_Nullable(Random? random)
        {
            var result11 = random?.NextInt64(0);
            var result12 = random?.NextInt64(1);

            var result21 = random?.NextInt64(10, 10);
            var result22 = random?.NextInt64(10, 11);
        }
    }
}
---------------------------------------------------------
(0): ReSharper Dead Code: Passing the long.MaxValue is redundant.
(1): ReSharper Dead Code: Passing the long.MaxValue is redundant.
(2): ReSharper Dead Code: Passing the long.MaxValue is redundant.
(3): ReSharper Dead Code: Passing 0 is redundant.
(4): ReSharper Dead Code: Passing the long.MaxValue is redundant.
(5): ReSharper Dead Code: Passing the long.MaxValue is redundant.
(6): ReSharper Dead Code: Passing the long.MaxValue is redundant.
(7): ReSharper Dead Code: Passing 0 is redundant.
(8): ReSharper Suggestion: The expression is always 0.
(9): ReSharper Suggestion: The expression is always 0.
(10): ReSharper Suggestion: The expression is the same as the first argument.
(11): ReSharper Suggestion: The expression is the same as the first argument.
