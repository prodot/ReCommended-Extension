using System;
using System.Globalization;

namespace Test
{
    public class TimesOnly
    {
        public void Add(TimeOnly timeOnly, TimeSpan value)
        {
            var result1 = timeOnly.Add(value, |out _|(0));
            var result2 = timeOnly.Add(value, |out int _|(1));
        }

        public void AddHours(TimeOnly timeOnly, double value)
        {
            var result1 = timeOnly.AddHours(value, |out _|(2));
            var result2 = timeOnly.AddHours(value, |out int _|(3));
        }

        public void AddMinutes(TimeOnly timeOnly, double value)
        {
            var result1 = timeOnly.AddMinutes(value, |out _|(4));
            var result2 = timeOnly.AddMinutes(value, |out int _|(5));
        }

        public void Parse(string s, ReadOnlySpan<char> s1)
        {
            var result1 = TimeOnly.Parse(s, |null|(6));
            var result2 = TimeOnly.Parse(s1, |null|(7));
        }

        public void ParseExact(string s, ReadOnlySpan<char> s1, string format, string[] formats)
        {
            var result1 = TimeOnly.ParseExact(s, format, |null|(8));
            var result2 = TimeOnly.ParseExact(s, formats, |null|(9));
            var result3 = TimeOnly.ParseExact(s1, formats, |null|(10));
        }

        public void ToString(TimeOnly timeOnly, string format, IFormatProvider provider)
        {
            var result11 = timeOnly.ToString(|null as string|(11));
            var result12 = timeOnly.ToString(|""|(12));
            var result13 = timeOnly.ToString(|"t"|(13));

            var result21 = timeOnly.ToString(|null as IFormatProvider|(14));

            var result31 = timeOnly.ToString(format, |null|(15));
            var result32 = timeOnly.ToString(|null|(16), provider);
            var result33 = timeOnly.ToString(|""|(17), provider);
            var result34 = timeOnly.ToString(|"t"|(18), provider);
            var result35 = timeOnly.ToString("o", |provider|(19));
            var result36 = timeOnly.ToString("O", |provider|(20));
            var result37 = timeOnly.ToString("r", |provider|(21));
            var result38 = timeOnly.ToString("R", |provider|(22));
        }

        public void TryParse(string s, ReadOnlySpan<char> s1, IFormatProvider? provider, out TimeOnly result)
        {
            var result11 = TimeOnly.TryParse(s, provider, |DateTimeStyles.None|(23), out result);
            var result12 = TimeOnly.TryParse(s, |null|(24), out result);

            var result21 = TimeOnly.TryParse(s1, provider, |DateTimeStyles.None|(25), out result);
            var result22 = TimeOnly.TryParse(s1, |null|(26), out result);
        }
    }
}
------------------------------------------------
0: Discarding is redundant.
QUICKFIXES:
Remove argument
1: Discarding is redundant.
QUICKFIXES:
Remove argument
2: Discarding is redundant.
QUICKFIXES:
Remove argument
3: Discarding is redundant.
QUICKFIXES:
Remove argument
4: Discarding is redundant.
QUICKFIXES:
Remove argument
5: Discarding is redundant.
QUICKFIXES:
Remove argument
6: Passing null is redundant.
QUICKFIXES:
Remove argument
7: Passing null is redundant.
QUICKFIXES:
Remove argument
8: Passing null is redundant.
QUICKFIXES:
Remove argument
9: Passing null is redundant.
QUICKFIXES:
Remove argument
10: Passing null is redundant.
QUICKFIXES:
Remove argument
11: Passing null or an empty string is redundant.
QUICKFIXES:
Remove argument
12: Passing null or an empty string is redundant.
QUICKFIXES:
Remove argument
13: Passing "t" is redundant.
QUICKFIXES:
Remove argument
14: Passing null is redundant.
QUICKFIXES:
Remove argument
15: Passing null is redundant.
QUICKFIXES:
Remove argument
16: Passing null or an empty string is redundant.
QUICKFIXES:
Remove argument
17: Passing null or an empty string is redundant.
QUICKFIXES:
Remove argument
18: Passing "t" is redundant.
QUICKFIXES:
Remove argument
19: Passing a format provider is redundant.
QUICKFIXES:
Remove argument
20: Passing a format provider is redundant.
QUICKFIXES:
Remove argument
21: Passing a format provider is redundant.
QUICKFIXES:
Remove argument
22: Passing a format provider is redundant.
QUICKFIXES:
Remove argument
23: Passing DateTimeStyles.None is redundant.
QUICKFIXES:
Remove argument
24: Passing null is redundant.
QUICKFIXES:
Remove argument
25: Passing DateTimeStyles.None is redundant.
QUICKFIXES:
Remove argument
26: Passing null is redundant.
QUICKFIXES:
Remove argument
