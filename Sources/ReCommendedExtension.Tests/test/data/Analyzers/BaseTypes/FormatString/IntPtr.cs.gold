namespace Test
{
    public class FormatStrings
    {
        public void RedundantFormatSpecifier(nint number)
        {
            var result1 = string.Format("{0|:G|(0)}", number);
            var result2 = string.Format("{0|:G0|(1)}", number);
            var result3 = string.Format("{0|:g|(2)}", number);
            var result4 = string.Format("{0|:g0|(3)}", number);
        }

        public void RedundantFormatSpecifier(nint? number)
        {
            var result1 = string.Format("{0|:G|(4)}", number);
            var result2 = string.Format("{0|:G0|(5)}", number);
            var result3 = string.Format("{0|:g|(6)}", number);
            var result4 = string.Format("{0|:g0|(7)}", number);
        }

        public void RedundantFormatPrecisionSpecifier(nint number)
        {
            var result11 = string.Format("{0:E|6|(8)}", number);
            var result12 = string.Format("{0:e|6|(9)}", number);

            var result21 = string.Format("{0:D|0|(10)}", number);
            var result22 = string.Format("{0:D|1|(11)}", number);
            var result23 = string.Format("{0:d|0|(12)}", number);
            var result24 = string.Format("{0:d|1|(13)}", number);

            var result31 = string.Format("{0:B|0|(14)}", number);
            var result32 = string.Format("{0:B|1|(15)}", number);
            var result33 = string.Format("{0:b|0|(16)}", number);
            var result34 = string.Format("{0:b|1|(17)}", number);

            var result41 = string.Format("{0:X|0|(18)}", number);
            var result42 = string.Format("{0:X|1|(19)}", number);
            var result43 = string.Format("{0:x|0|(20)}", number);
            var result44 = string.Format("{0:x|1|(21)}", number);
        }

        public void RedundantFormatPrecisionSpecifier(nint? number)
        {
            var result11 = string.Format("{0:E|6|(22)}", number);
            var result12 = string.Format("{0:e|6|(23)}", number);

            var result21 = string.Format("{0:D|0|(24)}", number);
            var result22 = string.Format("{0:D|1|(25)}", number);
            var result23 = string.Format("{0:d|0|(26)}", number);
            var result24 = string.Format("{0:d|1|(27)}", number);

            var result31 = string.Format("{0:B|0|(28)}", number);
            var result32 = string.Format("{0:B|1|(29)}", number);
            var result33 = string.Format("{0:b|0|(30)}", number);
            var result34 = string.Format("{0:b|1|(31)}", number);

            var result41 = string.Format("{0:X|0|(32)}", number);
            var result42 = string.Format("{0:X|1|(33)}", number);
            var result43 = string.Format("{0:x|0|(34)}", number);
            var result44 = string.Format("{0:x|1|(35)}", number);
        }

        public void SuspiciousFormatSpecifier(nint number)
        {
            var result1 = string.Format("{0:|R|(36)}", number);
            var result2 = string.Format("{0:|R3|(37)}", number);
            var result3 = string.Format("{0:|r|(38)}", number);
            var result4 = string.Format("{0:|r3|(39)}", number);
        }

        public void SuspiciousFormatSpecifier(nint? number)
        {
            var result1 = string.Format("{0:|R|(40)}", number);
            var result2 = string.Format("{0:|R3|(41)}", number);
            var result3 = string.Format("{0:|r|(42)}", number);
            var result4 = string.Format("{0:|r3|(43)}", number);
        }

        public void NoDetection(nint number)
        {
            var result1 = string.Format("{0:E}", number);
            var result2 = string.Format("{0:E5}", number);
            var result3 = string.Format("{0:D}", number);
            var result4 = string.Format("{0:D2}", number);
            var result5 = string.Format("{0:b8}", number);
            var result6 = string.Format("{0:x8}", number);
        }

        public void NoDetection(nint? number)
        {
            var result1 = string.Format("{0:E}", number);
            var result2 = string.Format("{0:E5}", number);
            var result3 = string.Format("{0:D}", number);
            var result4 = string.Format("{0:D2}", number);
            var result5 = string.Format("{0:b8}", number);
            var result6 = string.Format("{0:x8}", number);
        }
    }
}
---------------------------------------------------------
(0): ReSharper Dead Code: Specifying 'G' is redundant.
(1): ReSharper Dead Code: Specifying 'G0' is redundant.
(2): ReSharper Dead Code: Specifying 'g' is redundant.
(3): ReSharper Dead Code: Specifying 'g0' is redundant.
(4): ReSharper Dead Code: Specifying 'G' is redundant.
(5): ReSharper Dead Code: Specifying 'G0' is redundant.
(6): ReSharper Dead Code: Specifying 'g' is redundant.
(7): ReSharper Dead Code: Specifying 'g0' is redundant.
(8): ReSharper Dead Code: The format precision specifier is redundant, 'E' has the same effect.
(9): ReSharper Dead Code: The format precision specifier is redundant, 'e' has the same effect.
(10): ReSharper Dead Code: The format precision specifier is redundant, 'D' has the same effect.
(11): ReSharper Dead Code: The format precision specifier is redundant, 'D' has the same effect.
(12): ReSharper Dead Code: The format precision specifier is redundant, 'd' has the same effect.
(13): ReSharper Dead Code: The format precision specifier is redundant, 'd' has the same effect.
(14): ReSharper Dead Code: The format precision specifier is redundant, 'B' has the same effect.
(15): ReSharper Dead Code: The format precision specifier is redundant, 'B' has the same effect.
(16): ReSharper Dead Code: The format precision specifier is redundant, 'b' has the same effect.
(17): ReSharper Dead Code: The format precision specifier is redundant, 'b' has the same effect.
(18): ReSharper Dead Code: The format precision specifier is redundant, 'X' has the same effect.
(19): ReSharper Dead Code: The format precision specifier is redundant, 'X' has the same effect.
(20): ReSharper Dead Code: The format precision specifier is redundant, 'x' has the same effect.
(21): ReSharper Dead Code: The format precision specifier is redundant, 'x' has the same effect.
(22): ReSharper Dead Code: The format precision specifier is redundant, 'E' has the same effect.
(23): ReSharper Dead Code: The format precision specifier is redundant, 'e' has the same effect.
(24): ReSharper Dead Code: The format precision specifier is redundant, 'D' has the same effect.
(25): ReSharper Dead Code: The format precision specifier is redundant, 'D' has the same effect.
(26): ReSharper Dead Code: The format precision specifier is redundant, 'd' has the same effect.
(27): ReSharper Dead Code: The format precision specifier is redundant, 'd' has the same effect.
(28): ReSharper Dead Code: The format precision specifier is redundant, 'B' has the same effect.
(29): ReSharper Dead Code: The format precision specifier is redundant, 'B' has the same effect.
(30): ReSharper Dead Code: The format precision specifier is redundant, 'b' has the same effect.
(31): ReSharper Dead Code: The format precision specifier is redundant, 'b' has the same effect.
(32): ReSharper Dead Code: The format precision specifier is redundant, 'X' has the same effect.
(33): ReSharper Dead Code: The format precision specifier is redundant, 'X' has the same effect.
(34): ReSharper Dead Code: The format precision specifier is redundant, 'x' has the same effect.
(35): ReSharper Dead Code: The format precision specifier is redundant, 'x' has the same effect.
(36): ReSharper Warning: The format specifier might be unsupported.
(37): ReSharper Warning: The format specifier might be unsupported.
(38): ReSharper Warning: The format specifier might be unsupported.
(39): ReSharper Warning: The format specifier might be unsupported.
(40): ReSharper Warning: The format specifier might be unsupported.
(41): ReSharper Warning: The format specifier might be unsupported.
(42): ReSharper Warning: The format specifier might be unsupported.
(43): ReSharper Warning: The format specifier might be unsupported.
