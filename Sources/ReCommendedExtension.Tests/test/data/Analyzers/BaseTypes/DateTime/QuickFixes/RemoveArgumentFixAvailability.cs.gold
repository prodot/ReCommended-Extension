using System;
using System.Globalization;

namespace Test
{
    public class DateTimes
    {
        public void _Constructors(long ticks, DateOnly date, TimeOnly time, int year, int month, int day, int hour, int minute, int second, int millisecond, int microsecond, Calendar calendar, DateTimeKind kind)
        {
            var result11 = new DateTime(ticks, |DateTimeKind.Unspecified|(0));
            var result12 = new DateTime(date, time, |DateTimeKind.Unspecified|(1));
            var result13 = new DateTime(year, month, day, hour, minute, second, |DateTimeKind.Unspecified|(2));
            var result14 = new DateTime(year, month, day, hour, minute, second, |0|(3));
            var result15 = new DateTime(year, month, day, hour, minute, second, millisecond, |DateTimeKind.Unspecified|(4));
            var result16 = new DateTime(year, month, day, hour, minute, second, |0|(5), kind);
            var result17 = new DateTime(year, month, day, hour, minute, second, |0|(6), calendar);
            var result18 = new DateTime(year, month, day, hour, minute, second, millisecond, calendar, |DateTimeKind.Unspecified|(7));
            var result19 = new DateTime(year, month, day, hour, minute, second, millisecond, |0|(8));
            var result1A = new DateTime(year, month, day, hour, minute, second, millisecond, microsecond, |DateTimeKind.Unspecified|(9));
            var result1B = new DateTime(year, month, day, hour, minute, second, millisecond, |0|(10), kind);
            var result1C = new DateTime(year, month, day, hour, minute, second, millisecond, |0|(11), calendar);
            var result1D = new DateTime(year, month, day, hour, minute, second, millisecond, microsecond, calendar, |DateTimeKind.Unspecified|(12));
            var result1E = new DateTime(year, month, day, hour, minute, second, millisecond, |0|(13), calendar, kind);

            DateTime result21 = new(ticks, |DateTimeKind.Unspecified|(14));
            DateTime result22 = new(date, time, |DateTimeKind.Unspecified|(15));
            DateTime result23 = new(year, month, day, hour, minute, second, |DateTimeKind.Unspecified|(16));
            DateTime result24 = new(year, month, day, hour, minute, second, |0|(17));
            DateTime result25 = new(year, month, day, hour, minute, second, millisecond, |DateTimeKind.Unspecified|(18));
            DateTime result26 = new(year, month, day, hour, minute, second, |0|(19), kind);
            DateTime result27 = new(year, month, day, hour, minute, second, |0|(20), calendar);
            DateTime result28 = new(year, month, day, hour, minute, second, millisecond, calendar, |DateTimeKind.Unspecified|(21));
            DateTime result29 = new(year, month, day, hour, minute, second, millisecond, |0|(22));
            DateTime result2A = new(year, month, day, hour, minute, second, millisecond, microsecond, |DateTimeKind.Unspecified|(23));
            DateTime result2B = new(year, month, day, hour, minute, second, millisecond, |0|(24), kind);
            DateTime result2C = new(year, month, day, hour, minute, second, millisecond, |0|(25), calendar);
            DateTime result2D = new(year, month, day, hour, minute, second, millisecond, microsecond, calendar, |DateTimeKind.Unspecified|(26));
            DateTime result2E = new(year, month, day, hour, minute, second, millisecond, |0|(27), calendar, kind);
        }

        public void GetDateTimeFormats(DateTime dateTime, char format)
        {
            var result1 = dateTime.GetDateTimeFormats(|null|(28));
            var result2 = dateTime.GetDateTimeFormats(format, |null|(29));
        }

        public void Parse(string s, ReadOnlySpan<char> s1, IFormatProvider provider)
        {
            var result11 = DateTime.Parse(s, |null|(30));
            var result12 = DateTime.Parse(s, provider, |DateTimeStyles.None|(31));

            var result21 = DateTime.Parse(s1, |null|(32));
        }

        public void ParseExact(string s, string format, IFormatProvider provider)
        {
            var result = DateTime.ParseExact(s, format, provider, |DateTimeStyles.None|(33));
        }

        public void RedundantATryParsergument(string s, ReadOnlySpan<char> s1, IFormatProvider provider, out DateTime result)
        {
            var result11 = DateTime.TryParse(s, |null|(34), out result);
            var result12 = DateTime.TryParse(s1, |null|(35), out result);

            var result21 = DateTime.TryParse(s, provider, |DateTimeStyles.None|(36), out result);
            var result22 = DateTime.TryParse(s1, provider, |DateTimeStyles.None|(37), out result);
        }
    }
}
------------------------------------------------
0: Passing DateTimeKind.Unspecified is redundant.
QUICKFIXES:
Remove argument
1: Passing DateTimeKind.Unspecified is redundant.
QUICKFIXES:
Remove argument
2: Passing DateTimeKind.Unspecified is redundant.
QUICKFIXES:
Remove argument
3: Passing 0 is redundant.
QUICKFIXES:
Remove argument
4: Passing DateTimeKind.Unspecified is redundant.
QUICKFIXES:
Remove argument
5: Passing 0 is redundant.
QUICKFIXES:
Remove argument
6: Passing 0 is redundant.
QUICKFIXES:
Remove argument
7: Passing DateTimeKind.Unspecified is redundant.
QUICKFIXES:
Remove argument
8: Passing 0 is redundant.
QUICKFIXES:
Remove argument
9: Passing DateTimeKind.Unspecified is redundant.
QUICKFIXES:
Remove argument
10: Passing 0 is redundant.
QUICKFIXES:
Remove argument
11: Passing 0 is redundant.
QUICKFIXES:
Remove argument
12: Passing DateTimeKind.Unspecified is redundant.
QUICKFIXES:
Remove argument
13: Passing 0 is redundant.
QUICKFIXES:
Remove argument
14: Passing DateTimeKind.Unspecified is redundant.
QUICKFIXES:
Remove argument
15: Passing DateTimeKind.Unspecified is redundant.
QUICKFIXES:
Remove argument
16: Passing DateTimeKind.Unspecified is redundant.
QUICKFIXES:
Remove argument
17: Passing 0 is redundant.
QUICKFIXES:
Remove argument
18: Passing DateTimeKind.Unspecified is redundant.
QUICKFIXES:
Remove argument
19: Passing 0 is redundant.
QUICKFIXES:
Remove argument
20: Passing 0 is redundant.
QUICKFIXES:
Remove argument
21: Passing DateTimeKind.Unspecified is redundant.
QUICKFIXES:
Remove argument
22: Passing 0 is redundant.
QUICKFIXES:
Remove argument
23: Passing DateTimeKind.Unspecified is redundant.
QUICKFIXES:
Remove argument
24: Passing 0 is redundant.
QUICKFIXES:
Remove argument
25: Passing 0 is redundant.
QUICKFIXES:
Remove argument
26: Passing DateTimeKind.Unspecified is redundant.
QUICKFIXES:
Remove argument
27: Passing 0 is redundant.
QUICKFIXES:
Remove argument
28: Passing null is redundant.
QUICKFIXES:
Remove argument
29: Passing null is redundant.
QUICKFIXES:
Remove argument
30: Passing null is redundant.
QUICKFIXES:
Remove argument
31: Passing DateTimeStyles.None is redundant.
QUICKFIXES:
Remove argument
32: Passing null is redundant.
QUICKFIXES:
Remove argument
33: Passing DateTimeStyles.None is redundant.
QUICKFIXES:
Remove argument
34: Passing null is redundant.
QUICKFIXES:
Remove argument
35: Passing null is redundant.
QUICKFIXES:
Remove argument
36: Passing DateTimeStyles.None is redundant.
QUICKFIXES:
Remove argument
37: Passing DateTimeStyles.None is redundant.
QUICKFIXES:
Remove argument
