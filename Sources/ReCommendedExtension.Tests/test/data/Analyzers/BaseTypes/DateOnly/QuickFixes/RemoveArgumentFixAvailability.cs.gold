using System;
using System.Globalization;

namespace Test
{
    public class DatesOnly
    {
        public void Parse(string s, ReadOnlySpan<char> s1)
        {
            var result1 = DateOnly.Parse(s, |null|(0));
            var result2 = DateOnly.Parse(s1, |null|(1));
        }

        public void ParseExact(string s, ReadOnlySpan<char> s1, string format, string[] formats)
        {
            var result1 = DateOnly.ParseExact(s, format, |null|(2));
            var result2 = DateOnly.ParseExact(s, formats, |null|(3));
            var result3 = DateOnly.ParseExact(s1, formats, |null|(4));
        }

        public void TryParse(string s, ReadOnlySpan<char> s1, IFormatProvider? provider, out DateOnly result)
        {
            var result11 = DateOnly.TryParse(s, provider, |DateTimeStyles.None|(5), out result);
            var result12 = DateOnly.TryParse(s, |null|(6), out result);

            var result21 = DateOnly.TryParse(s1, provider, |DateTimeStyles.None|(7), out result);
            var result22 = DateOnly.TryParse(s1, |null|(8), out result);
        }
    }
}
------------------------------------------------
0: Passing null is redundant.
QUICKFIXES:
Remove argument
1: Passing null is redundant.
QUICKFIXES:
Remove argument
2: Passing null is redundant.
QUICKFIXES:
Remove argument
3: Passing null is redundant.
QUICKFIXES:
Remove argument
4: Passing null is redundant.
QUICKFIXES:
Remove argument
5: Passing DateTimeStyles.None is redundant.
QUICKFIXES:
Remove argument
6: Passing null is redundant.
QUICKFIXES:
Remove argument
7: Passing DateTimeStyles.None is redundant.
QUICKFIXES:
Remove argument
8: Passing null is redundant.
QUICKFIXES:
Remove argument
