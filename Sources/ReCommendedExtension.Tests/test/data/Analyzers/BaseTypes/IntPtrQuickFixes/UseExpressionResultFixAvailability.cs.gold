using System;

namespace Test
{
    public class IntPtrs
    {
        public void Clamp(nint number)
        {
            const int c = 1;

            var result11 = |nint.Clamp(number, 1, 0x01)|(0);
            var result12 = |nint.Clamp(number, 1, c)|(1);
            var result13 = |nint.Clamp(number, 97, 'a')|(2);

            nint result21 = |nint.Clamp(number, 1, 0x01)|(3);
            nint result22 = |nint.Clamp(number, 1, c)|(4);
            nint result23 = |nint.Clamp(number, 97, 'a')|(5);

            var result3 = |Math.Clamp(number, (nint)1, (nint)1)|(6);
        }

        public void DivRem(nint left)
        {
            const int c = 1;

            var result11 = |nint.DivRem(0, 10)|(7);

            (nint, nint) result21 = |nint.DivRem(0, 10)|(8);

            (nint quotient, nint remainder) result32 = |nint.DivRem(0, 10)|(9);

            var result41 = |nint.DivRem(left, 1)|(10);
            var result42 = |nint.DivRem(0x10, 1)|(11);
            var result43 = |nint.DivRem(c, 1)|(12);
            var result44 = |nint.DivRem('a', 1)|(13);

            (nint, nint) result51 = |nint.DivRem(left, 1)|(14);
            (nint, nint) result52 = |nint.DivRem(0x10, 1)|(15);
            (nint, nint) result53 = |nint.DivRem(c, 1)|(16);
            (nint, nint) result54 = |nint.DivRem('a', 1)|(17);

            (nint quotient, nint remainder) result61 = |nint.DivRem(left, 1)|(18);
            (nint quotient, nint remainder) result62 = |nint.DivRem(0x10, 1)|(19);
            (nint quotient, nint remainder) result63 = |nint.DivRem(c, 1)|(20);
            (nint quotient, nint remainder) result64 = |nint.DivRem('a', 1)|(21);

            var result71 = |Math.DivRem((nint)0, (nint)10)|(22);
            var result72 = |Math.DivRem(left, (nint)1)|(23);
        }

        public void Equals(nint number)
        {
            var result = |number.Equals(null)|(24);
        }

        public void Max()
        {
            const int c = 10;

            var result11 = |nint.Max(10, 0x0A)|(25);
            var result12 = |nint.Max(10, c)|(26);
            var result13 = |nint.Max(97, 'a')|(27);

            nint result21 = |nint.Max(10, 0x0A)|(28);
            nint result22 = |nint.Max(10, c)|(29);
            nint result23 = |nint.Max(97, 'a')|(30);

            var result31 = |Math.Max((nint)10, (nint)10)|(31);
        }

        public void Min()
        {
            const int c = 10;

            var result11 = |nint.Min(10, 0x0A)|(32);
            var result12 = |nint.Min(10, c)|(33);
            var result13 = |nint.Min(97, 'a')|(34);

            nint result21 = |nint.Min(10, 0x0A)|(35);
            nint result22 = |nint.Min(10, c)|(36);
            nint result23 = |nint.Min(97, 'a')|(37);

            var result31 = |Math.Min((nint)10, (nint)10)|(38);
        }
    }
}
------------------------------------------------
0: The expression is always 1.
QUICKFIXES:
Replace with '(nint)0x01'
Replace with '(nint)1'
1: The expression is always 1.
QUICKFIXES:
Replace with '(nint)c'
Replace with '(nint)1'
2: The expression is always 97.
QUICKFIXES:
Replace with '(nint)'a''
Replace with '(nint)97'
3: The expression is always 1.
QUICKFIXES:
Replace with '0x01'
Replace with '1'
4: The expression is always 1.
QUICKFIXES:
Replace with 'c'
Replace with '1'
5: The expression is always 97.
QUICKFIXES:
Replace with ''a''
Replace with '97'
6: The expression is always 1.
QUICKFIXES:
Replace with '(nint)1'
7: The expression is always (0, 0).
QUICKFIXES:
Replace with '(Quotient: (nint)0, Remainder: (nint)0)'
8: The expression is always (0, 0).
QUICKFIXES:
Replace with '(0, 0)'
9: The expression is always (0, 0).
QUICKFIXES:
Replace with '(0, 0)'
10: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(Quotient: left, Remainder: (nint)0)'
11: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(Quotient: (nint)0x10, Remainder: (nint)0)'
12: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(Quotient: (nint)c, Remainder: (nint)0)'
13: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(Quotient: (nint)'a', Remainder: (nint)0)'
14: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(left, 0)'
15: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(0x10, 0)'
16: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(c, 0)'
17: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '('a', 0)'
18: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(left, 0)'
19: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(0x10, 0)'
20: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(c, 0)'
21: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '('a', 0)'
22: The expression is always (0, 0).
QUICKFIXES:
Replace with '(Quotient: (nint)0, Remainder: (nint)0)'
23: The expression is always the same as the first argument with no remainder.
QUICKFIXES:
Replace with '(Quotient: left, Remainder: (nint)0)'
24: The expression is always false.
QUICKFIXES:
Replace with 'false'
25: The expression is always 10.
QUICKFIXES:
Replace with '(nint)0x0A'
Replace with '(nint)10'
26: The expression is always 10.
QUICKFIXES:
Replace with '(nint)c'
Replace with '(nint)10'
27: The expression is always 97.
QUICKFIXES:
Replace with '(nint)'a''
Replace with '(nint)97'
28: The expression is always 10.
QUICKFIXES:
Replace with '0x0A'
Replace with '10'
29: The expression is always 10.
QUICKFIXES:
Replace with 'c'
Replace with '10'
30: The expression is always 97.
QUICKFIXES:
Replace with ''a''
Replace with '97'
31: The expression is always 10.
QUICKFIXES:
Replace with '(nint)10'
32: The expression is always 10.
QUICKFIXES:
Replace with '(nint)0x0A'
Replace with '(nint)10'
33: The expression is always 10.
QUICKFIXES:
Replace with '(nint)c'
Replace with '(nint)10'
34: The expression is always 97.
QUICKFIXES:
Replace with '(nint)'a''
Replace with '(nint)97'
35: The expression is always 10.
QUICKFIXES:
Replace with '0x0A'
Replace with '10'
36: The expression is always 10.
QUICKFIXES:
Replace with 'c'
Replace with '10'
37: The expression is always 97.
QUICKFIXES:
Replace with ''a''
Replace with '97'
38: The expression is always 10.
QUICKFIXES:
Replace with '(nint)10'
