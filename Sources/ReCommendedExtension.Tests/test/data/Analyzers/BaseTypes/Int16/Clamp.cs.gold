using System;

namespace Test
{
    public class Int16s
    {
        public void ExpressionResult(short number)
        {
            var result11 = |short.Clamp(number, 1, 1)|(0);
            var result12 = |short.Clamp(number, short.MinValue, short.MaxValue)|(1);

            var result21 = |Math.Clamp(number, (short)1, (short)1)|(2);
            var result22 = |Math.Clamp(number, short.MinValue, short.MaxValue)|(3);
        }

        public void NoDetection(short number, short min, short max)
        {
            var result11 = short.Clamp(number, 1, max);
            var result12 = short.Clamp(number, min, 10);

            var result21 = Math.Clamp(number, (short)1, max);
            var result22 = Math.Clamp(number, min, short.MaxValue);

            short.Clamp(number, 1, 1);
            short.Clamp(number, short.MinValue, short.MaxValue);

            Math.Clamp(number, (short)1, (short)1);
            Math.Clamp(number, short.MinValue, short.MaxValue);
        }
    }
}
---------------------------------------------------------
(0): ReSharper Suggestion: The expression is always 1.
(1): ReSharper Suggestion: The expression is always the same as the first argument.
(2): ReSharper Suggestion: The expression is always 1.
(3): ReSharper Suggestion: The expression is always the same as the first argument.
