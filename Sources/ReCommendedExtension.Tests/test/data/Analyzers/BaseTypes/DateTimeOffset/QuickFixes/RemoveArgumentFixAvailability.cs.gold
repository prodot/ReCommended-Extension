using System;
using System.Globalization;

namespace Test
{
    public class DateTimeOffsets
    {
        public void _Constructors(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)
        {
            var result11 = new DateTimeOffset(year, month, day, hour, minute, second, |0|(0), offset);
            var result12 = new DateTimeOffset(year, month, day, hour, minute, second, millisecond, |0|(1), offset);
            var result13 = new DateTimeOffset(year, month, day, hour, minute, second, millisecond, |0|(2), calendar, offset);

            DateTimeOffset result21 = new(year, month, day, hour, minute, second, |0|(3), offset);
            DateTimeOffset result22 = new(year, month, day, hour, minute, second, millisecond, |0|(4), offset);
            DateTimeOffset result23 = new(year, month, day, hour, minute, second, millisecond, |0|(5), calendar, offset);
        }

        public void Parse(string input, ReadOnlySpan<char> s, IFormatProvider provider)
        {
            var result11 = DateTimeOffset.Parse(input, |null|(6));
            var result12 = DateTimeOffset.Parse(input, provider, |DateTimeStyles.None|(7));

            var result21 = DateTimeOffset.Parse(s, |null|(8));
        }

        public void ParseExact(string input, string format, IFormatProvider formatProvider)
        {
            var result = DateTimeOffset.ParseExact(input, format, formatProvider, |DateTimeStyles.None|(9));
        }

        public void ToString(DateTimeOffset dateTimeOffset, string format, IFormatProvider formatProvider)
        {
            var result11 = dateTimeOffset.ToString(|null as string|(10));
            var result12 = dateTimeOffset.ToString(|""|(11));

            var result21 = dateTimeOffset.ToString(|null as IFormatProvider|(12));

            var result31 = dateTimeOffset.ToString(|null|(13), formatProvider);
            var result32 = dateTimeOffset.ToString(|""|(14), formatProvider);
            var result33 = dateTimeOffset.ToString(format, |null|(15));
            var result34 = dateTimeOffset.ToString("O", |formatProvider|(16));
            var result35 = dateTimeOffset.ToString("o", |formatProvider|(17));
            var result36 = dateTimeOffset.ToString("R", |formatProvider|(18));
            var result37 = dateTimeOffset.ToString("r", |formatProvider|(19));
            var result38 = dateTimeOffset.ToString("s", |formatProvider|(20));
            var result39 = dateTimeOffset.ToString("u", |formatProvider|(21));
        }

        public void TryParse(string s, ReadOnlySpan<char> s1, IFormatProvider provider, out DateTimeOffset result)
        {
            var result11 = DateTimeOffset.TryParse(s, |null|(22), out result);
            var result12 = DateTimeOffset.TryParse(s1, |null|(23), out result);

            var result21 = DateTimeOffset.TryParse(s, provider, |DateTimeStyles.None|(24), out result);
            var result22 = DateTimeOffset.TryParse(s1, provider, |DateTimeStyles.None|(25), out result);
        }
    }
}
------------------------------------------------
0: Passing 0 is redundant.
QUICKFIXES:
Remove argument
1: Passing 0 is redundant.
QUICKFIXES:
Remove argument
2: Passing 0 is redundant.
QUICKFIXES:
Remove argument
3: Passing 0 is redundant.
QUICKFIXES:
Remove argument
4: Passing 0 is redundant.
QUICKFIXES:
Remove argument
5: Passing 0 is redundant.
QUICKFIXES:
Remove argument
6: Passing null is redundant.
QUICKFIXES:
Remove argument
7: Passing DateTimeStyles.None is redundant.
QUICKFIXES:
Remove argument
8: Passing null is redundant.
QUICKFIXES:
Remove argument
9: Passing DateTimeStyles.None is redundant.
QUICKFIXES:
Remove argument
10: Passing null or an empty string is redundant.
QUICKFIXES:
Remove argument
11: Passing null or an empty string is redundant.
QUICKFIXES:
Remove argument
12: Passing null is redundant.
QUICKFIXES:
Remove argument
13: Passing null or an empty string is redundant.
QUICKFIXES:
Remove argument
14: Passing null or an empty string is redundant.
QUICKFIXES:
Remove argument
15: Passing null is redundant.
QUICKFIXES:
Remove argument
16: Passing a format provider is redundant.
QUICKFIXES:
Remove argument
17: Passing a format provider is redundant.
QUICKFIXES:
Remove argument
18: Passing a format provider is redundant.
QUICKFIXES:
Remove argument
19: Passing a format provider is redundant.
QUICKFIXES:
Remove argument
20: Passing a format provider is redundant.
QUICKFIXES:
Remove argument
21: Passing a format provider is redundant.
QUICKFIXES:
Remove argument
22: Passing null is redundant.
QUICKFIXES:
Remove argument
23: Passing null is redundant.
QUICKFIXES:
Remove argument
24: Passing DateTimeStyles.None is redundant.
QUICKFIXES:
Remove argument
25: Passing DateTimeStyles.None is redundant.
QUICKFIXES:
Remove argument
