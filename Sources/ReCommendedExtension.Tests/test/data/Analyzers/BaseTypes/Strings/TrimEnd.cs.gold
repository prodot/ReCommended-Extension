using System;

namespace Test
{
    public class Strings
    {
        public void RedundantArgument(string text)
        {
            var result11 = text.TrimEnd(|[]|(0));
            var result12 = text.TrimEnd(|new char[0]|(1));
            var result13 = text.TrimEnd(|new char[] { }|(2));
            var result14 = text.TrimEnd(|Array.Empty<char>()|(3));
            var result15 = text.TrimEnd(|null|(4));
        }

        public void DuplicateElements(string text)
        {
            var result11 = text.TrimEnd('a', 'b', |'a'|(5));
            var result12 = text.TrimEnd(['a', 'b', |'a'|(6)]);
            var result13 = text.TrimEnd(new[] { 'a', 'b', |'a'|(7) });
        }

        public void NoDetection(string text, char c)
        {
            var result11 = text.TrimEnd('a', 'b', c);
            var result12 = text.TrimEnd(['a', 'b', 'c']);
            var result13 = text.TrimEnd(new[] { 'a', 'b', c });
        }
    }
}
---------------------------------------------------------
(0): ReSharper Dead Code: Passing an empty array is redundant.
(1): ReSharper Dead Code: Passing an empty array is redundant.
(2): ReSharper Dead Code: Passing an empty array is redundant.
(3): ReSharper Dead Code: Passing an empty array is redundant.
(4): ReSharper Dead Code: Passing null is redundant.
(5): ReSharper Dead Code: The character is already passed.
(6): ReSharper Dead Code: The character is already passed.
(7): ReSharper Dead Code: The character is already passed.
