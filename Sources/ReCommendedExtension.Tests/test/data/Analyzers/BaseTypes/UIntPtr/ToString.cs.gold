using System;

namespace Test
{
    public class UIntPtrs
    {
        public void RedundantArgument(nuint number, string format, IFormatProvider provider)
        {
            var result11 = number.ToString(|null as string|(0));
            var result12 = number.ToString(|""|(1));

            var result21 = number.ToString(|"G"|(2));
            var result22 = number.ToString(|"G0"|(3));
            var result23 = number.ToString(|"g"|(4));
            var result24 = number.ToString(|"g0"|(5));

            var result31 = number.ToString(|null as IFormatProvider|(6));
            var result32 = number.ToString(|null|(7), provider);
            var result33 = number.ToString(|""|(8), provider);
            var result34 = number.ToString(format, |null|(9));
            var result35 = number.ToString(|""|(10), |null|(11));

            var result41 = number.ToString(|"G"|(12), provider);
            var result42 = number.ToString(|"G0"|(13), provider);
            var result43 = number.ToString(|"g"|(14), provider);
            var result44 = number.ToString(|"g0"|(15), provider);
        }

        public void RedundantFormatPrecisionSpecifier(nuint number, IFormatProvider provider)
        {
            var result11 = number.ToString("E|6|(16)");
            var result12 = number.ToString("e|6|(17)");

            var result21 = number.ToString("D|0|(18)");
            var result22 = number.ToString("D|1|(19)");
            var result23 = number.ToString("d|0|(20)");
            var result24 = number.ToString("d|1|(21)");

            var result31 = number.ToString("B|0|(22)");
            var result32 = number.ToString("B|1|(23)");
            var result33 = number.ToString("b|0|(24)");
            var result34 = number.ToString("b|1|(25)");
            var result35 = number.ToString("X|0|(26)");
            var result36 = number.ToString("X|1|(27)");
            var result37 = number.ToString("x|0|(28)");
            var result38 = number.ToString("x|1|(29)");

            var result41 = number.ToString("E|6|(30)", provider);
            var result42 = number.ToString("e|6|(31)", provider);

            var result51 = number.ToString("D|0|(32)", provider);
            var result52 = number.ToString("D|1|(33)", provider);
            var result53 = number.ToString("d|0|(34)", provider);
            var result54 = number.ToString("d|1|(35)", provider);

            var result61 = number.ToString("B|0|(36)", |provider|(37));
            var result62 = number.ToString("B|1|(38)", |provider|(39));
            var result63 = number.ToString("b|0|(40)", |provider|(41));
            var result64 = number.ToString("b|1|(42)", |provider|(43));
            var result65 = number.ToString("X|0|(44)", |provider|(45));
            var result66 = number.ToString("X|1|(46)", |provider|(47));
            var result67 = number.ToString("x|0|(48)", |provider|(49));
            var result68 = number.ToString("x|1|(50)", |provider|(51));

            const string formatSpecifier = "E6";

            var result71 = number.ToString(|formatSpecifier|(52));
            var result72 = number.ToString(|formatSpecifier|(53), provider);

            var result81 = number.ToString(@"E|6|(54)");
            var result82 = number.ToString($@"E|6|(55)");
            var result83 = number.ToString(@$"E|6|(56)");
            var result84 = number.ToString("""E|06|(57)""");
            var result85 = number.ToString($"""E|06|(58)""");
            var result86 = number.ToString($$"""E|06|(59)""");
            var result87 = number.ToString("""
                                           E|006|(60)
                                           """);
        }

        public void SuspiciousFormatSpecifier(nuint number, IFormatProvider provider)
        {
            var result11 = number.ToString(|"R"|(61));
            var result12 = number.ToString(|"R3"|(62));
            var result13 = number.ToString(|"r"|(63));
            var result14 = number.ToString(|"r3"|(64));

            var result21 = number.ToString(|"R"|(65), provider);
            var result22 = number.ToString(|"R3"|(66), provider);
            var result23 = number.ToString(|"r"|(67), provider);
            var result24 = number.ToString(|"r3"|(68), provider);
        }

        public void NoDetection(nuint number, string format, IFormatProvider provider)
        {
            var result11 = number.ToString(format);
            var result12 = number.ToString("G2");
            var result13 = number.ToString("E");
            var result14 = number.ToString("E5");
            var result15 = number.ToString("D");
            var result16 = number.ToString("D2");
            var result17 = number.ToString("b8");
            var result18 = number.ToString("x8");

            var result21 = number.ToString(provider);
            var result22 = number.ToString(format, provider);
            var result23 = number.ToString("G2", provider);
            var result24 = number.ToString("E", provider);
            var result25 = number.ToString("E5", provider);
            var result26 = number.ToString("D", provider);
            var result27 = number.ToString("D2", provider);
        }
    }
}
---------------------------------------------------------
(0): ReSharper Dead Code: Passing null or an empty string is redundant.
(1): ReSharper Dead Code: Passing null or an empty string is redundant.
(2): ReSharper Dead Code: Passing "G" is redundant.
(3): ReSharper Dead Code: Passing "G0" is redundant.
(4): ReSharper Dead Code: Passing "g" is redundant.
(5): ReSharper Dead Code: Passing "g0" is redundant.
(6): ReSharper Dead Code: Passing null is redundant.
(7): ReSharper Dead Code: Passing null or an empty string is redundant.
(8): ReSharper Dead Code: Passing null or an empty string is redundant.
(9): ReSharper Dead Code: Passing null is redundant.
(10): ReSharper Dead Code: Passing null or an empty string is redundant.
(11): ReSharper Dead Code: Passing null is redundant.
(12): ReSharper Dead Code: Passing "G" is redundant.
(13): ReSharper Dead Code: Passing "G0" is redundant.
(14): ReSharper Dead Code: Passing "g" is redundant.
(15): ReSharper Dead Code: Passing "g0" is redundant.
(16): ReSharper Dead Code: The format precision specifier is redundant, 'E' has the same effect.
(17): ReSharper Dead Code: The format precision specifier is redundant, 'e' has the same effect.
(18): ReSharper Dead Code: The format precision specifier is redundant, 'D' has the same effect.
(19): ReSharper Dead Code: The format precision specifier is redundant, 'D' has the same effect.
(20): ReSharper Dead Code: The format precision specifier is redundant, 'd' has the same effect.
(21): ReSharper Dead Code: The format precision specifier is redundant, 'd' has the same effect.
(22): ReSharper Dead Code: The format precision specifier is redundant, 'B' has the same effect.
(23): ReSharper Dead Code: The format precision specifier is redundant, 'B' has the same effect.
(24): ReSharper Dead Code: The format precision specifier is redundant, 'b' has the same effect.
(25): ReSharper Dead Code: The format precision specifier is redundant, 'b' has the same effect.
(26): ReSharper Dead Code: The format precision specifier is redundant, 'X' has the same effect.
(27): ReSharper Dead Code: The format precision specifier is redundant, 'X' has the same effect.
(28): ReSharper Dead Code: The format precision specifier is redundant, 'x' has the same effect.
(29): ReSharper Dead Code: The format precision specifier is redundant, 'x' has the same effect.
(30): ReSharper Dead Code: The format precision specifier is redundant, 'E' has the same effect.
(31): ReSharper Dead Code: The format precision specifier is redundant, 'e' has the same effect.
(32): ReSharper Dead Code: The format precision specifier is redundant, 'D' has the same effect.
(33): ReSharper Dead Code: The format precision specifier is redundant, 'D' has the same effect.
(34): ReSharper Dead Code: The format precision specifier is redundant, 'd' has the same effect.
(35): ReSharper Dead Code: The format precision specifier is redundant, 'd' has the same effect.
(36): ReSharper Dead Code: The format precision specifier is redundant, 'B' has the same effect.
(37): ReSharper Dead Code: Passing a provider with a binary format specifier is redundant.
(38): ReSharper Dead Code: The format precision specifier is redundant, 'B' has the same effect.
(39): ReSharper Dead Code: Passing a provider with a binary format specifier is redundant.
(40): ReSharper Dead Code: The format precision specifier is redundant, 'b' has the same effect.
(41): ReSharper Dead Code: Passing a provider with a binary format specifier is redundant.
(42): ReSharper Dead Code: The format precision specifier is redundant, 'b' has the same effect.
(43): ReSharper Dead Code: Passing a provider with a binary format specifier is redundant.
(44): ReSharper Dead Code: The format precision specifier is redundant, 'X' has the same effect.
(45): ReSharper Dead Code: Passing a provider with a hexadecimal format specifier is redundant.
(46): ReSharper Dead Code: The format precision specifier is redundant, 'X' has the same effect.
(47): ReSharper Dead Code: Passing a provider with a hexadecimal format specifier is redundant.
(48): ReSharper Dead Code: The format precision specifier is redundant, 'x' has the same effect.
(49): ReSharper Dead Code: Passing a provider with a hexadecimal format specifier is redundant.
(50): ReSharper Dead Code: The format precision specifier is redundant, 'x' has the same effect.
(51): ReSharper Dead Code: Passing a provider with a hexadecimal format specifier is redundant.
(52): ReSharper Dead Code: The format precision specifier is redundant, 'E' has the same effect.
(53): ReSharper Dead Code: The format precision specifier is redundant, 'E' has the same effect.
(54): ReSharper Dead Code: The format precision specifier is redundant, 'E' has the same effect.
(55): ReSharper Dead Code: The format precision specifier is redundant, 'E' has the same effect.
(56): ReSharper Dead Code: The format precision specifier is redundant, 'E' has the same effect.
(57): ReSharper Dead Code: The format precision specifier is redundant, 'E' has the same effect.
(58): ReSharper Dead Code: The format precision specifier is redundant, 'E' has the same effect.
(59): ReSharper Dead Code: The format precision specifier is redundant, 'E' has the same effect.
(60): ReSharper Dead Code: The format precision specifier is redundant, 'E' has the same effect.
(61): ReSharper Warning: The format specifier might be unsupported.
(62): ReSharper Warning: The format specifier might be unsupported.
(63): ReSharper Warning: The format specifier might be unsupported.
(64): ReSharper Warning: The format specifier might be unsupported.
(65): ReSharper Warning: The format specifier might be unsupported.
(66): ReSharper Warning: The format specifier might be unsupported.
(67): ReSharper Warning: The format specifier might be unsupported.
(68): ReSharper Warning: The format specifier might be unsupported.
