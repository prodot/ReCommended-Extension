namespace Test
{
    public class InterpolatedStringItems
    {
        public enum SampleEnum
        {
            Red,
            Green,
            Blue,
        }

        public void CastEnums(SampleEnum value)
        {
            var result1 = $"{|(int)value|(0)}";
            var result2 = $"{|(int?)value|(1)}";
            var result3 = $"{|(long)value|(2)}";
            var result4 = $"{|(long?)value|(3)}";
        }

        public void CastEnums(SampleEnum? value)
        {
            var result1 = $"{|(int?)value|(4)}";
            var result2 = $"{|(long?)value|(5)}";
        }

        public void NoDetection(SampleEnum value)
        {
            var result1 = $"{(byte)value}";
            var result2 = $"{(byte?)value}";
        }

        public void NoDetection(SampleEnum? value)
        {
            var result1 = $"{(int)value}";
            var result2 = $"{(byte)value}";
            var result3 = $"{(byte?)value}";
            var result4 = $"{(long)value}";
        }
    }
}
---------------------------------------------------------
(0): ReSharper Suggestion: Use the 'D' format specifier instead of the type cast.
(1): ReSharper Suggestion: Use the 'D' format specifier instead of the type cast.
(2): ReSharper Suggestion: Use the 'D' format specifier instead of the type cast.
(3): ReSharper Suggestion: Use the 'D' format specifier instead of the type cast.
(4): ReSharper Suggestion: Use the 'D' format specifier instead of the type cast.
(5): ReSharper Suggestion: Use the 'D' format specifier instead of the type cast.
